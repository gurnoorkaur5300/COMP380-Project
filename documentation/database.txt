Help on module database:

NAME
    database

CLASSES
    builtins.object
        Database
    
    class Database(builtins.object)
     |  Database(dbFile='defaultDatabase.db')
     |  
     |  Manages interactions with the SQLite database.
     |  :author: Gregory Calderon
     |  :version: 1.0
     |  
     |  Attributes:
     |      conn (sqlite3.Connection): Connection to the SQLite database.
     |  
     |  Methods:
     |      __init__: Initializes the Database object.
     |      buildTable: Builds the necessary tables in the database if they don't exist.
     |      insertCustomer: Inserts a new customer into the 'customers' table.
     |      getEmail: Retrieves customer information based on their email address.
     |      getReservations: Retrieves reservations for a specific customer.
     |      deleteReservation: Deletes a reservation from the 'reservations' table.
     |      getAdminEmail: Retrieves administrator information based on their email address.
     |      isVerified: Verifies the login credentials of a customer or administrator.
     |      getCustomerInfo: Retrieves customer IDs and names from the 'customers' table.
     |      getResInfo: Retrieves reservation IDs, check-in/out dates, and payment status from the 'reservations' table.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, dbFile='defaultDatabase.db')
     |      Initializes the Database object.
     |      
     |      Args:
     |          dbFile (str): The name of the SQLite database file.
     |  
     |  buildTable(self)
     |      Creates necessary tables in the database if they don't exist.
     |  
     |  deleteReservation(self, reserveId)
     |      Deletes a reservation from the 'reservations' table.
     |      
     |      Args:
     |          reserveId (int): The ID of the reservation to be deleted.
     |  
     |  getAdminEmail(self, adminEmail)
     |      Retrieves administrator information based on their email address.
     |      
     |      Args:
     |          adminEmail (str): The email address of the administrator.
     |      
     |      Returns:
     |          Administrator: An Administrator object containing the administrator's information, or None if not found.
     |  
     |  getCustomerInfo(self)
     |      Retrieves customer IDs and names from the 'customers' table.
     |      
     |      Returns:
     |          list: A list of tuples containing customer IDs and names.
     |  
     |  getEmail(self, email)
     |      Retrieves customer information based on their email address.
     |      
     |      Args:
     |          email (str): The email address of the customer.
     |      
     |      Returns:
     |          Customer: A Customer object containing the customer's information, or None if not found.
     |  
     |  getResInfo(self)
     |      Retrieves reservation information from the 'reservations' table.
     |      
     |      Returns:
     |          list: A list of tuples containing reservation IDs, check-in/out dates, and payment status.
     |  
     |  getReservations(self, customerId)
     |      Retrieves reservations for a specific customer.
     |      
     |      Args:
     |          customerId (int): The ID of the customer.
     |      
     |      Returns:
     |          list: A list of check-in dates for the customer's reservations.
     |  
     |  insertCustomer(self, customer)
     |      Inserts a new customer into the 'customers' table.
     |      
     |      Args:
     |          customer (Customer): The Customer object to be inserted into the database.
     |  
     |  isVerified(self, checkForEmail, checkForHashPasswrd, isCustomer)
     |      Verifies the login credentials of a customer or administrator.
     |      
     |      Args:
     |          checkForEmail (str): The email address to be verified.
     |          checkForHashPasswrd (str): The hashed password to be verified.
     |          isCustomer (int): Indicates whether the user is a customer (1) or an administrator (0).
     |      
     |      Returns:
     |          bool: True if the credentials are verified, False otherwise.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FILE
    /Users/gregcalderon/Desktop/380 CompSys/COMP380-Project/database.py


